version: "3.8"

services:
  api1:
    build: .
    hostname: api1
    restart: always
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "80"
    environment:
      - DATABASE_URL=postgres://postgres:pgpass@db:5432/rinha?sslmode=disable
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  api2:
    build: .
    hostname: api2
    restart: always
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "80"
    environment:
      - DATABASE_URL=postgres://postgres:pgpass@db:5432/rinha?sslmode=disable
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  db:
    image: postgres:latest
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: pgpass
      POSTGRES_DB: rinha
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'